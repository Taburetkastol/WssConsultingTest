using Application.Dto;
using Application.Interfaces;
using Domain.Entities;
using Microsoft.AspNetCore.Mvc;

namespace OrgDirectory.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class DivisionsController : ControllerBase
    {
        private readonly IDivisionService _divisionService;
        public DivisionsController(IDivisionService divisionService)
        {
            _divisionService = divisionService;
        }

        [HttpGet]
        public ActionResult<IList<DivisionNode>> GetAllDivisions()
        {
            throw new NotImplementedException();
        }
        
        [HttpGet]
        public ActionResult<IList<DivisionNode>> GetAutogeneratedNumber()
        {
            throw new NotImplementedException();
        }
        
        [HttpPost]
        public ActionResult<Division> CreateDivision([FromBody] DivisionCreateModel model)
        {
            throw new NotImplementedException();
        }
        
        [HttpPut("{id}")]
        public IActionResult RenameDivision(Guid id, [FromBody] string newName)
        {
            throw new NotImplementedException();
        }

        [HttpPut("{id}/move")]
        public IActionResult MoveDivision(Guid id, [FromBody] MoveDivisionModel model)
        {
            throw new NotImplementedException();
        }

        [HttpDelete("{id}")]
        public IActionResult DeleteDivision(Guid id)
        {
            throw new NotImplementedException();
        }

        [HttpGet("export")]
        public IActionResult ExportXml()
        {
            throw new NotImplementedException();
        }

        [HttpPost("import")]
        public IActionResult ImportXml([FromBody] string xmlData)
        {
            throw new NotImplementedException();
        }
    }

    #region Dtos
    
    public class DivisionCreateModel 
    {
        public string Name { get; set; } = string.Empty;
        public Guid? ParentId { get; set; }
    }
    public class MoveDivisionModel 
    {
        public Guid? NewParentId { get; set; }
        public int? NewOrder { get; set; }
    }
    
    #endregion
}
